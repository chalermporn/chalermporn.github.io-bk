const PRE_CACHE="p1",RUNTIME_CACHE="r1",PRE_CACHE_URLS=["./assets/css/style.css","./pwa/manifest.json","./pwa/icons/icon-min.svg","./favicon.ico"],HOSTNAME_WHITELIST=["ntsd.dev","giscus.app"],putInCache=async(e,t)=>{const a=await caches.open(RUNTIME_CACHE);await a.put(e,t)},cacheFirst=async(e,t)=>{var a=await caches.match(e);if(a)return a;const n=await t;if(n)return putInCache(e,n.clone()),n;try{const s=await fetch(e);return putInCache(e,s.clone()),s}catch(e){return new Response("Network error happened",{status:408,headers:{"Content-Type":"text/plain"}})}};self.addEventListener("activate",e=>{const t=[PRE_CACHE,RUNTIME_CACHE];e.waitUntil(caches.keys().then(e=>e.filter(e=>!t.includes(e))).then(e=>Promise.all(e.map(e=>caches.delete(e)))).then(()=>self.clients.claim())),e.waitUntil(async()=>{self.registration.navigationPreload&&await self.registration.navigationPreload.enable()})}),self.addEventListener("install",e=>{e.waitUntil(caches.open(PRE_CACHE).then(e=>e.addAll(PRE_CACHE_URLS)).then(self.skipWaiting()))}),self.addEventListener("fetch",e=>{var t=new URL(e.request.url)["hostname"];-1<HOSTNAME_WHITELIST.indexOf(t)&&e.respondWith(cacheFirst(e.request,e.preloadResponse))});