const PRE_CACHE="p1",RUNTIME_CACHE="r1",PRE_CACHE_URLS=["./assets/css/style.css","./pwa/manifest.json","./pwa/icons/icon-min.svg"],HOSTNAME_WHITELIST=["ntsd.dev","giscus.app"],putInCache=async(e,a)=>{const t=await caches.open(RUNTIME_CACHE);await t.put(e,a)},cacheFirst=async(e,a)=>{var t=await caches.match(e);if(t)return t;const s=await a;if(s)return putInCache(e,s.clone()),s;try{const n=await fetch(e);return putInCache(e,n.clone()),n}catch(e){return new Response("Network error happened",{status:408,headers:{"Content-Type":"text/plain"}})}};self.addEventListener("activate",e=>{const t=[PRE_CACHE,RUNTIME_CACHE];e.waitUntil((async()=>{const e=await caches.keys(),a=e.filter(e=>!t.includes(e));await Promise.all(a.map(async e=>{await caches.delete(e)})),self.registration.navigationPreload&&await self.registration.navigationPreload.enable()})())}),self.addEventListener("install",e=>{e.waitUntil((async()=>{const e=await caches.open(PRE_CACHE);await e.addAll(PRE_CACHE_URLS)})())}),self.addEventListener("fetch",e=>{var a=new URL(e.request.url)["hostname"];-1<HOSTNAME_WHITELIST.indexOf(a)&&e.respondWith(cacheFirst(e.request,e.preloadResponse))});