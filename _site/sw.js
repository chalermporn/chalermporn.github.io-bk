const PRE_CACHE="precache-v1",RUNTIME_CACHE="runtime",HASH_CACHE="hash",CLOUDFLARE_WORKER_HOST="https://ntsd.dev",PRE_CACHE_URLS=["./","./assets/css/style.css","./pwa/icons/icon-min.svg","https://cdn.jsdelivr.net/npm/anchor-js@4.3.1/anchor.min.js","https://cdn.jsdelivr.net/npm/scrollnav@3.0.1/dist/scrollnav.min.umd.js","https://cdn.jsdelivr.net/npm/wordcloud@1.2.2/src/wordcloud2.min.js","https://giscus.app/client.js","https://giscus.app/js/iframeResizer.min.js"],HOSTNAME_WHITELIST=[self.location.hostname,"cdn.jsdelivr.net","giscus.app"];function fetchAndCache(t){return caches.open(RUNTIME_CACHE).then(s=>fetch(t).then(e=>s.put(t,e.clone()).then(()=>e)))}self.addEventListener("install",e=>{e.waitUntil(caches.open(PRE_CACHE).then(e=>e.addAll(PRE_CACHE_URLS)).then(self.skipWaiting()))}),self.addEventListener("activate",e=>{const s=[PRE_CACHE,RUNTIME_CACHE,HASH_CACHE];e.waitUntil(caches.keys().then(e=>e.filter(e=>!s.includes(e))).then(e=>Promise.all(e.map(e=>caches.delete(e)))).then(()=>self.clients.claim()))}),self.addEventListener("fetch",s=>{var e=new URL(s.request.url)["hostname"];-1<HOSTNAME_WHITELIST.indexOf(e)&&s.respondWith(caches.match(s.request).then(e=>e||fetchAndCache(s.request)))});