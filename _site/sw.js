const PRE_CACHE="p1",RUNTIME_CACHE="r1",PRE_CACHE_URLS=["./assets/css/style.css","./pwa/manifest.json","./pwa/icons/icon-min.svg"],HOSTNAME_WHITELIST=["ntsd.dev","giscus.app"],putInCache=async(e,a)=>{await(await caches.open(RUNTIME_CACHE)).put(e,a)},cacheFirst=async e=>{var a=await caches.match(e);if(a)return a;try{var t=await fetch(e);return putInCache(e,t.clone()),t}catch(e){return new Response("Network error happened",{status:408,headers:{"Content-Type":"text/plain"}})}};self.addEventListener("activate",e=>{const a=[PRE_CACHE,RUNTIME_CACHE];e.waitUntil((async()=>{var e=(await caches.keys()).filter(e=>!a.includes(e));await Promise.all(e.map(async e=>{await caches.delete(e)}))})())}),self.addEventListener("install",e=>{e.waitUntil((async()=>{await(await caches.open(PRE_CACHE)).addAll(PRE_CACHE_URLS)})())}),self.addEventListener("fetch",e=>{var a=new URL(e.request.url)["hostname"];-1<HOSTNAME_WHITELIST.indexOf(a)&&e.respondWith(cacheFirst(e.request))});